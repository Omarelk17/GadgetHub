@model GadgetHub.Domain.Entities.ShippingDetails

@{
	ViewBag.Title = "Checkout";
}

<h2>Checkout</h2>

<p>Please enter your details and we'll ship your goods right away!</p>

@using (Html.BeginForm())
{
	@Html.ValidationSummary()
	<h3>Ship to</h3>
	<div class="form-group">
		<label for="name">Name:</label>
		@Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
		@Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		<label for="line1">Line1:</label>
		@Html.TextBoxFor(x => x.Line1, new { @class = "form-control" })
		@Html.ValidationMessageFor(x => x.Line1, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		<label for="line2">Line 2:</label>
		@Html.TextBoxFor(x => x.Line2, new { @class = "form-control" })
	</div>

	<div class="form-group">
		<label for="line3">Line 3:</label>
		@Html.TextBoxFor(x => x.Line3, new { @class = "form-control" })
	</div>

	<div class="form-group">
		<label for="city">City:</label>
		@Html.TextBoxFor(x => x.City, new { @class = "form-control" })
		@Html.ValidationMessageFor(x => x.City, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		<label for="state">State:</label>
		@Html.TextBoxFor(x => x.State, new { @class = "form-control" })
	</div>

	<div class="form-group">
		<label for="zip">Zip:</label>
		@Html.TextBoxFor(x => x.Zip, new { @class = "form-control" })
	</div>

	<div class="form-group">
		<label for="country">Country:</label>
		@Html.TextBoxFor(x => x.Country, new { @class = "form-control" })
	</div>

	<div class="form-group">
		<label for="giftWrap">Gift Wrap:</label>
		@Html.CheckBoxFor(x => x.GiftWrap)
	</div>

	<button type="submit" class="btn btn-primary" value="Complete order">Submit Order</button>
}
